class Solution 
{
    public:
    bool ispossible(int barrier,int A[],int N,int M){
        int student=1,pages=0;
        for(int i=0;i<N;i++){
            if(A[i]>barrier){
                return false;
            }
            if(pages+A[i]>barrier){
                student++;
                pages=0;
                pages+=A[i];
            }
            else{
                pages+=A[i];
            }
            if(student>M){
                return false;
            }
            
        }
        return true;
    }
    void findpages(int A[],int low,int high,int N,int M,int &ans){
        while(low<=high){
            int mid=(low+high)/2;
            if(ispossible(mid,A,N,M)){
                ans=mid;
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
    }
    //Function to find minimum number of pages.
    int findPages(int A[], int N, int M) 
    {
        //code here
        int sum=0;
        for(int i=0;i<N;i++){
            sum+=A[i];
        }
        int low=A[0],high=sum;
        int ans;
        findpages(A,low,high,N,M,ans);
        return ans;
        
    }
};
